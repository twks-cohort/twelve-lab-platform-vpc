---
version: 2.1

orbs:
  terraform: twdps/terraform@0.6.0
  op: twdps/onepassword@1.0.0

# ==== global pipeline parameters

parameters:
  context:
    description: circleci context for all jobs
    type: string
    default: cohorts-global
  terraform-version:
    description: terraform version for all jobs
    type: string
    default: "1.3.3"
  executor-image:
    description: use this image for local job definitions
    type: string
    default: twdps/circleci-infra-aws:alpine-edge

# ==== triggers

# git push: deploy sandbox
on-push-main: &on-push-main
  branches:
    only: /main/
  tags:
    ignore: /.*/

# git tag: release 
on-tag-main: &on-tag-main
  branches:
    ignore: /.*/
  tags:
    only: /.*/

commands:

  set-environment: 
    description: generate environment credentials and configuration from templates
    parameters:
      cluster:
        description: cluster environment
        type: string
      source-env:
        description: env to source
        type: string
    steps:
      - op/env:
          env-file: << parameters.source-env >>
      - run:
          name: set ~/.terraformrc
          command: op inject -i tpl/terraformrc.tpl -o ~/.terraformrc
      - run:
          name: set << parameters.cluster >> environment variables
          command: op inject -i environments/<< parameters.cluster >>.auto.tfvars.json.tpl -o << parameters.cluster >>.auto.tfvars.json

jobs:

  validate-vpc:
    docker:
      - image: << pipeline.parameters.executor-image >>
    parameters:
      cluster:
        description: cluster vpc configuration to validate
        type: string
      source-env:
        description: env to source
        type: string
    steps:
      - checkout
      - setup_remote_docker
      - set-environment:
          cluster: << parameters.cluster >>
          source-env: << parameters.source-env >>
      - run:
          name: test << parameters.cluster >> configuration
          environment:
            TEST_ENV: << parameters.cluster >>
          command: bash scripts/vpc.test.sh << parameters.cluster >>

workflows:
  version: 2

  deploy sandbox-ap-southeast-2 vpc:
    jobs:
      - terraform/plan:
          name: sandbox-ap-southeast-2 change plan
          context: << pipeline.parameters.context >>
          shell: op run --env-file=op.nonprod.env -- /bin/bash -eo pipefail
          workspace: sandbox-ap-southeast-2
          terraform-version: << pipeline.parameters.terraform-version >>
          before-terraform:
            - set-environment:
                cluster: sandbox-ap-southeast-2
                source-env: op.nonprod.env
          filters: *on-push-main

      - approve sandbox-ap-southeast-2 changes:
          type: approval
          requires:
            - sandbox-ap-southeast-2 change plan
          filters: *on-push-main

      - terraform/apply:
          name: apply sandbox-ap-southeast-2 changes
          context: << pipeline.parameters.context >>
          shell: op run --env-file=op.nonprod.env -- /bin/bash -eo pipefail
          workspace: sandbox-ap-southeast-2
          terraform-version: << pipeline.parameters.terraform-version >>
          before-terraform:
            - set-environment:
                cluster: sandbox-ap-southeast-2
                source-env: op.nonprod.env
          requires:
            - approve sandbox-ap-southeast-2 changes
          filters: *on-push-main

      - validate-vpc:
          name: test sandbox-ap-southeast-2 vpc configuration
          context: << pipeline.parameters.context >>
          cluster: sandbox-ap-southeast-2
          source-env: op.nonprod.env
          requires:
            - apply sandbox-ap-southeast-2 changes
          filters: *on-push-main


  # generate-release-notes:
  #   jobs:
  #     - executor-tools/release:
  #         name: release-lab-platform-vpc
  #         context: << pipeline.parameters.context >>
  #         shell: op run --env-file=op.prod.env -- /bin/bash -eo pipefail
  #         filters: *on-tag-main

  nightly vpc configuration validation:
    triggers:
      - schedule:
          cron: "0 1 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - validate-vpc:
          name: nightly sandbox-ap-southeast-2 vpc validation
          context: << pipeline.parameters.context >>
          source-env: op.nonprod.env
          cluster: sandbox-ap-southeast-2
